{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","components/JslSet/Set9b/questionComp.jsx","components/JslSet/Set9b/markingSheetComp.jsx","components/JslSet/Set9b/mainComponent.jsx","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","QuestionComp","state","index","assNum","props","AssignmentNumber","Assignments","goToPrvQue","s1","setState","goTonxtQue","setAnswers","userAnswer","questions","updateAnswerArr","check","this","text","arr","options","Fragment","className","map","opt","idx","onClick","String","fromCharCode","answer","type","length","Component","MarkingSheetComp","setDecideColor","userAns","orignalAns","que","MainComponent","assignments","subject","name","status","assignmentNum","calcScore","count","userExist","forEach","elem","setCheckvalue","isChkElgbl","i","makeDashBoard","as","openAssignment","makeAssignmentHeader","call","setStatus","st","handleAnswerArr","viewMarkSheet","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffcef604.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <h4 className=\"bg-primary text-white\">Welcome To React</h4>\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from \"react\"\n\nexport default class QuestionComp extends Component {\n    state = {\n        index: 0,\n        assNum: this.props.AssignmentNumber,\n        Assignments: this.props.Assignments,\n    }\n\n    goToPrvQue = () => {\n        let s1 = { ...this.state }\n        s1.index--\n        this.setState(s1)\n    }\n\n    goTonxtQue = () => {\n        let s1 = { ...this.state }\n        s1.index++\n        this.setState(s1)\n    }\n\n    setAnswers = (index, userAnswer) => {\n        let { Assignments, assNum } = this.state\n        Assignments[assNum].questions[index].userAnswer = userAnswer\n        this.props.updateAnswerArr(Assignments)\n    }\n\n    render() {\n        let { check } = this.props\n        let { index, assNum, Assignments } = this.state\n        let text = Assignments[assNum].questions[index].text\n        let arr = []\n        arr = Assignments[assNum].questions[index].options\n        let userAnswer = Assignments[assNum].questions[index].userAnswer\n\n        return (\n            <React.Fragment>\n                <h4>Question Number : {index + 1}</h4>\n                <div className=\"row\">\n                    <div className=\"col\"> {text}</div>\n                </div>\n                {arr.map((opt, idx) => {\n                    return (\n                        <div className=\"row\">\n                            <div className=\"col myStyle\" onClick={() => this.setAnswers(index, String.fromCharCode(65 + idx))}>\n                                {String.fromCharCode(65 + idx)}.{opt}\n                            </div>\n                        </div>\n                    )\n                })}\n\n                <span>{userAnswer ? `Your Answer : ${userAnswer}` : 'Your Answer : Not Defined'}</span>\n\n                {\n                    check === 1\n                        ?\n                        userAnswer && userAnswer === String.fromCharCode(64 + Assignments[assNum].questions[index].answer)\n                            ? <p className=\"text-success\">Correct Answer</p>\n                            : <p className=\"text-danger\">\n                                {`Incorrect. The correct answer is ${String.fromCharCode(64 + Assignments[assNum].questions[index].answer)}`}\n                            </p>\n\n                        : ''\n\n                }\n\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                        {index > 0 ? <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.goToPrvQue()}>Previous Question</button> : ''}\n                    </div>\n                    <div className=\"col-2\">\n                        {index < Assignments[assNum].questions.length - 1 ? <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.goTonxtQue()}>Next Question</button> : ''}\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}","import React, { Component } from \"react\"\n\nexport default class MarkingSheetComp extends Component {\n    state = {}\n\n    setDecideColor = (userAns, orignalAns) => {\n        let { check } = this.props\n        if (check === 1) {\n            if (userAns) {\n                if (userAns === String.fromCharCode(64 + orignalAns)) {\n                    return 'bg-success'\n                } else {\n                    return 'bg-danger'\n                }\n            } else {\n                return 'bg-warning'\n            }\n        } else {\n            if (userAns) {\n                return 'bg-secondary'\n            } else return 'bg-warning'\n        }\n\n    }\n\n    render() {\n        let { questions } = this.props\n        return (\n            <div className=\"row my-4\">\n                {questions.map((que, index) => {\n                    return (\n                        <div className=\"col-1\">\n                            <button\n                                type=\"button\"\n                                className={\"btn  text-dark m-1 \" + this.setDecideColor(que.userAnswer, que.answer)}\n                            >\n                                {index + 1}.{que.userAnswer}\n                            </button>\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport QuestionComp from './questionComp'\nimport MarkingSheetComp from './markingSheetComp'\n\nexport default class MainComponent extends Component {\n\n    state = {\n        assignments: [\n            {\n                subject: \"General Knowledge\",\n                name: \"4A\",\n                questions: [\n                    {\n                        text: \"What is the capital of India\",\n                        options: [\"New Delhi\", \"London\", \"Paris\", \"Tokyo\"],\n                        answer: 1\n                    },\n                    {\n                        text: \"What is the capital of Italy\",\n                        options: [\"Berlin\", \"London\", \"Rome\", \"Paris\"],\n                        answer: 3\n                    },\n                    {\n                        text: \"What is the capital of China\",\n                        options: [\"Shanghai\", \"HongKong\", \"Shenzen\", \"Beijing\"],\n                        answer: 4\n                    },\n                    {\n                        text: \"What is the capital of Nepal\",\n                        options: [\"Tibet\", \"Kathmandu\", \"Colombo\", \"Kabul\"],\n                        answer: 2\n                    },\n                    {\n                        text: \"What is the capital of Iraq\",\n                        options: [\"Baghdad\", \"Dubai\", \"Riyadh\", \"Teheran\"],\n                        answer: 1\n                    },\n                    {\n                        text: \"What is the capital of Bangladesh\",\n                        options: [\"Teheran\", \"Kabul\", \"Colomdo\", \"Dhaka\"],\n                        answer: 4\n                    },\n                    {\n                        text: \"What is the capital of Sri Lanka\",\n                        options: [\"Islamabad\", \"Colombo\", \"Maldives\", \"Dhaka\"],\n                        answer: 2\n                    },\n                    {\n                        text: \"What is the capital of Saudi Arabia\",\n                        options: [\"Baghdad\", \"Dubai\", \"Riyadh\", \"Teheran\"],\n                        answer: 1\n                    },\n                    {\n                        text: \"What is the capital of France\",\n                        options: [\"London\", \"New York\", \"Paris\", \"Rome\"],\n                        answer: 3\n                    },\n                    {\n                        text: \"What is the capital of Germany\",\n                        options: [\"Frankfurt\", \"Budapest\", \"Prague\", \"Berlin\"],\n                        answer: 4\n                    },\n                    {\n                        text: \"What is the capital of Sweden\",\n                        options: [\"Helsinki\", \"Stockholm\", \"Copenhagen\", \"Lisbon\"],\n                        answer: 2\n                    },\n                    {\n                        text: \"What is the currency of UK\",\n                        options: [\"Dollar\", \"Mark\", \"Yen\", \"Pound\"],\n                        answer: 4\n                    },\n                    {\n                        text: \"What is the height of Mount Everest\",\n                        options: [\"9231 m\", \"8848 m\", \"8027 m\", \"8912 m\"],\n                        answer: 2\n                    },\n                    {\n                        text: \"What is the capital of Japan\",\n                        options: [\"Beijing\", \"Osaka\", \"Kyoto\", \"Tokyo\"],\n                        answer: 4\n                    },\n                    {\n                        text: \"What is the capital of Egypt\",\n                        options: [\"Cairo\", \"Teheran\", \"Baghdad\", \"Dubai\"],\n                        answer: 1\n                    }\n                ],\n            },\n            {\n                subject: \"Maths\",\n                name: \"10C\",\n                questions: [\n                    {\n                        text: \"What is 8 * 9\",\n                        options: [\"72\", \"76\", \"64\", \"81\"],\n                        answer: 1\n                    },\n                    {\n                        text: \"What is 2*3+4*5\",\n                        options: [\"70\", \"50\", \"26\", \"60\"],\n                        answer: 3\n                    }\n                ],\n            },\n            {\n                subject: \"Chemistry\",\n                name: \"7A(i)\",\n                questions: [\n                    {\n                        text: \"What is the melting point of ice\",\n                        options: [\"0F\", \"0C\", \"100C\", \"100F\"],\n                        answer: 2\n                    },\n                    {\n                        text: \"What is the atomic number of Oxygen\",\n                        options: [\"6\", \"7\", \"8\", \"9\"],\n                        answer: 3\n                    },\n                    {\n                        text: \"What is the atomic number of Carbon\",\n                        options: [\"6\", \"7\", \"8\", \"9\"],\n                        answer: 1\n                    },\n                    {\n                        text: \"Which of these is an inert element\",\n                        options: [\"Flourine\", \"Suphur\", \"Nitrogen\", \"Argon\"],\n                        answer: 4\n                    },\n                    {\n                        text: \"What is 0 Celsius in Fahrenheit\",\n                        options: [\"0\", \"32\", \"20\", \"48\"],\n                        answer: 2\n                    }\n                ],\n            },\n            {\n                subject: \"Computers\",\n                name: \"3B\",\n                questions: [\n                    {\n                        text: \"How many bytes are there in 1 kilobyte\",\n                        options: [\"16\", \"256\", \"1024\", \"4096\"],\n                        answer: 3\n                    },\n                    {\n                        text: \"Who developed ReactJS\",\n                        options: [\"Facebook\", \"Google\", \"Microsoft\", \"Apple\"],\n                        answer: 1\n                    },\n                    {\n                        text: \"Angular is supported by \",\n                        options: [\"Facebook\", \"Google\", \"Microsoft\", \"Twitter\"],\n                        answer: 2\n                    },\n                    {\n                        text: \"C# was developed by \",\n                        options: [\"Amazon\", \"Google\", \"Microsoft\", \"Twitter\"],\n                        answer: 3\n                    },\n                    {\n                        text: \"Bootstrap was developed by \",\n                        options: [\"Apple\", \"Google\", \"Facebook\", \"Twitter\"],\n                        answer: 4\n                    },\n                    {\n                        text: \"AWS is provided by \",\n                        options: [\"Apple\", \"Amazon\", \"Microsoft\", \"Google\"],\n                        answer: 2\n                    },\n                    {\n                        text: \"Azure is provided by \",\n                        options: [\"Microsoft\", \"Amazon\", \"IBM\", \"Google\"],\n                        answer: 1\n                    },\n                    {\n                        text: \"Angular is a framework that uses \",\n                        options: [\"Java\", \"Python\", \"C#\", \"Typescript\"],\n                        answer: 4\n                    }\n                ],\n            }\n        ],\n        status: 1,\n        assignmentNum: '',\n        check: -1\n    }\n\n    calcScore = (index) => {\n        let { assignments } = this.state\n        let arr = assignments[index].questions\n        let count = 0\n        let userExist = 0\n        arr.forEach(elem => {\n            if (elem.userAnswer) {\n                userExist = 1\n                count = (String.fromCharCode(64 + elem.answer) === elem.userAnswer) ? ++count : count\n            }\n        })\n\n        if (userExist === 1) {\n            return `${count}/${arr.length}`\n        } else return 'Not Done'\n    }\n\n    setCheckvalue = () => {\n        let s1 = { ...this.state }\n        s1.check = 1\n        s1.status = 2\n        this.setState(s1)\n    }\n\n    isChkElgbl = (assNum) => {\n        let { assignments } = this.state\n        let arr = assignments[assNum].questions\n        for (let i = 0; i < arr.length; i++) {\n            if (arr[i].userAnswer) {\n                return 1\n            }\n        }\n        return 0\n    }\n\n\n    makeDashBoard = () => {\n        let { assignments, check } = this.state\n        return (\n            <React.Fragment>\n                <h1 className=\"text-center my-1\">Choose the Assignment</h1>\n                <div className=\"row border bg-dark text-white text-center fs-5\">\n                    <div className=\"col\">Subject</div>\n                    <div className=\"col\">Assignment</div>\n                    <div className=\"col\">Performance</div>\n                    <div className=\"col\"></div>\n                    <div className=\"col\"></div>\n                </div>\n\n                {assignments.map((as, index) => {\n                    let { subject, name } = as\n                    return (\n                        <div className=\"row border bg-light text-center fs-5\">\n                            <div className=\"col\">{subject}</div>\n                            <div className=\"col\">{name}</div>\n                            <div className=\"col\">\n                                {this.calcScore(index)}\n                            </div>\n                            <div className=\"col\">\n\n                                <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.openAssignment(index)}>\n                                    Do\n                                </button>\n                            </div>\n                            <div className=\"col\">\n                                {\n                                    this.isChkElgbl(index)\n                                        ? <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.setCheckvalue()}>\n                                            Check\n                                        </button>\n                                        : ''\n                                }\n                            </div>\n                        </div>\n                    )\n                })}\n\n            </React.Fragment>\n        )\n    }\n\n    openAssignment = (index) => {\n        let s1 = { ...this.state }\n        s1.assignmentNum = index\n        s1.status = 2\n        this.setState(s1)\n    }\n\n    makeAssignmentHeader = (assignmentNum) => {\n        let { assignments } = this.state\n        return (\n            <div className=\"row border bg-light my-2\">\n                <div className=\"row\">\n                    <div className=\"col-1\"></div>\n                    <div className=\"col\">\n                        <h2 className=\"text-center\">{assignments[assignmentNum].subject} : Assignment {assignments[assignmentNum].name}</h2>\n                    </div>\n                    <div className=\"col-1\"></div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-2\">\n                        Time : 5 mins\n                    </div>\n                    <div className=\"col-8\"></div>\n                    <div className=\"col-2\">\n                        Max Score : 15\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    call = () => {\n        this.makeDashBoard()\n    }\n\n    setStatus = (st) => {\n        let s1 = { ...this.state }\n        s1.status = st\n        s1.check = -1\n        this.setState(s1)\n    }\n\n    handleAnswerArr = (assignments) => {\n        let s1 = { ...this.state }\n        s1.assignments = assignments\n        this.setState(s1)\n    }\n\n    viewMarkSheet = (st) => {\n        let s1 = { ...this.state }\n        s1.status = st\n        this.setState(s1)\n    }\n\n    render() {\n        let { status, assignmentNum, assignments, check } = this.state\n        console.log('Check Value is = ' + check)\n        return (\n            <div className=\"container\">\n                {\n                    status === 1\n                        ? this.makeDashBoard()\n                        : status === 2\n                            ? <React.Fragment>\n                                {this.makeAssignmentHeader(assignmentNum)}\n                                <div className=\"row\">\n                                    <div className=\"col-9\"></div>\n                                    <div className=\"col-3\">\n                                        <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.viewMarkSheet(3)}>\n                                            View Marking Sheet\n                                        </button>\n                                    </div>\n                                </div>\n                                <QuestionComp\n                                    Assignments={assignments}\n                                    updateAnswerArr={this.handleAnswerArr}\n                                    AssignmentNumber={assignmentNum}\n                                    check={check}\n                                />\n                            </React.Fragment>\n                            : status === 3\n                                ? <React.Fragment>\n                                    {this.makeAssignmentHeader(assignmentNum)}\n                                    <MarkingSheetComp\n                                        questions={assignments[assignmentNum].questions}\n                                        check={check}\n                                    />\n                                    <div className=\"row\">\n                                        <div className=\"col text-center\">\n                                            <button type=\"button\" className=\"btn btn-secondary btn-lg\" onClick={() => this.setStatus(1)}>\n                                                {\n                                                    check === 1\n                                                        ? 'Go to the List of Assignmemts'\n                                                        : 'Submit the Assignment'\n                                                }\n                                            </button>\n                                        </div>\n                                    </div>\n                                </React.Fragment>\n                                : ''\n                }\n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport MainComponent from \"./components/JslSet/Set9b/mainComponent\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainComponent />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}